import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

def plot_genre_counts(meta_data):
    unique_genres = meta_data['track_genre'].unique()
    
    input_valid=False
    
    while input_valid==False:
        num_of_genres= input("Please enter the number of genres you want to enter")
        if not num_of_genres.isnumeric():
            print("Please enter numbers only.")
        elif not 1 <= int(num_of_genres) <= 10:
            print("You must have minimum 2 genres and maximum 10 genres.")
        else:
            input_valid = True  
            
    genres_to_compare=[]
    for i in range(0,num_of_genres):
        input_valid = False
        while not input_valid:
            genre_input = input("Please enter one of the genres you want to filter ").lower()
            
            if genre_input not in unique_genres:
                print("The entered genre is not present in the dataset.")
            else:
                genres_to_compare.append(genre_input)
                input_valid = True        
        
    
    plt.figure(figsize=(10, 6))
    genre_counts.plot(kind='bar')
    plt.title('Number of Songs in Each Genre')
    plt.xlabel('Genre')
    plt.ylabel('Number of Songs')
    plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels for better readability
    plt.tight_layout()
    plt.show()
data = pd.read_csv('downloads/dataset.csv')
meta_data = data[['track_id', 'artists', 'track_name', 'album_name', 'popularity', 'duration_ms', 'track_genre']]
music_data = data[['danceability', 'energy', 'key', 'loudness', 'mode', 'speechiness', 'acousticness', 'instrumentalness', 'liveness', 'valence', 'tempo', 'time_signature']]
print(meta_data.head())
print(music_data.head())




plot_genre_counts(meta_data)